{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","query","setQuery","error","setError","setMovie","isLoading","setIsLoading","htmlFor","type","value","id","onChange","e","target","placeholder","onClick","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","poster","Poster","Title","Plot","imdbID","finally","classNames","disabled","find","item","currentMovies","App","dotenv","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d99a284.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","/* eslint-disable padding-line-between-statements */\n/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\nconst IMDB_URL = 'https://www.imdb.com/title/';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies, movies }) => {\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState<ResponseError | null>(null);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleQueryChange = (\n    e:React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(e.target.value);\n    setError(null);\n  };\n\n  const handleAddMovie = () => {\n    if (\n      movie !== null\n      && !movies.find(item => item.imdbId === movie.imdbId)\n    ) {\n      setMovies(currentMovies => [...currentMovies, movie]);\n    }\n    setQuery('');\n    setMovie(null);\n  };\n\n  const findMovie = (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    setIsLoading(true);\n    getMovie(query).then(res => {\n      if ('Error' in res) {\n        setError(res);\n      } else {\n        const poster = res.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : res.Poster;\n\n        setMovie({\n          title: res.Title,\n          description: res.Plot,\n          imgUrl: poster,\n          imdbUrl: IMDB_URL + res.imdbID,\n          imdbId: res.imdbID,\n        });\n      }\n    }).finally(() => setIsLoading(false));\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              value={query}\n              id=\"movie-title\"\n              onChange={handleQueryChange}\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              onClick={findMovie}\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=181eb0b3';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport dotenv from 'dotenv';\nimport { App } from './App';\n\ndotenv.config();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}